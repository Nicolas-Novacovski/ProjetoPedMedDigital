// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoPetMedDigital.Models;

#nullable disable

namespace ProjetoPetMedDigital.Migrations
{
    [DbContext(typeof(PetMedContext))]
    [Migration("20250602225528_AjustarModelosParaNulidadeFKs")]
    partial class AjustarModelosParaNulidadeFKs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoPetMedDigital.Models.AgendaVeterinario", b =>
                {
                    b.Property<int>("IdAgendaVeterinario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgendaVeterinario"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteIdPaciente")
                        .HasColumnType("int");

                    b.HasKey("IdAgendaVeterinario");

                    b.HasIndex("IdVeterinario");

                    b.HasIndex("PacienteIdPaciente");

                    b.ToTable("AgendaVeterinario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Agendamento", b =>
                {
                    b.Property<int>("IdAgendamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgendamento"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdAgendamento");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdVeterinario");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.CadastroColaborador", b =>
                {
                    b.Property<int>("IdColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColaborador"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dtnascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdColaborador");

                    b.ToTable("CadastroColaborador");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.ItemEstoque", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("PrecoCusto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("TransacaoDesejada")
                        .HasColumnType("int");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProduto");

                    b.ToTable("ItemEstoque");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NomeCachorro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Problema")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Recomendacoes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SinaisVitais")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TipoAtendimento")
                        .HasColumnType("int");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdCliente");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Procedimento", b =>
                {
                    b.Property<int>("IdProcedimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProcedimento"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeProcedimento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProcedimento");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Procedimento");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Prontuario", b =>
                {
                    b.Property<int>("IdProntuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProntuario"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("FrequenciaCardiaca")
                        .HasColumnType("int");

                    b.Property<int?>("FrequenciaRespiratoria")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdAgendamento")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int?>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("MotivoConsulta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<float?>("Peso")
                        .HasColumnType("real");

                    b.Property<int?>("Temperatura")
                        .HasColumnType("int");

                    b.Property<string>("Tratamento")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IdProntuario");

                    b.HasIndex("IdAgendamento")
                        .IsUnique()
                        .HasFilter("[IdAgendamento] IS NOT NULL");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdVeterinario");

                    b.ToTable("Prontuario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Servico", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServico"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdAgendamento")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdValor")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TipoVenda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdServico");

                    b.HasIndex("IdAgendamento");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.HasIndex("IdValor")
                        .IsUnique();

                    b.HasIndex("IdVeterinario");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Usuario", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Login");

                    b.HasIndex("IdColaborador")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Vacina", b =>
                {
                    b.Property<int>("IdVacina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVacina"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeVacina")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdVacina");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdProduto")
                        .IsUnique();

                    b.ToTable("Vacina");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Valor", b =>
                {
                    b.Property<int>("IdValor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdValor"));

                    b.Property<decimal>("CompraProdutos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoPagamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ValorProcedimento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorReceita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorSaida")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdValor");

                    b.HasIndex("IdCliente");

                    b.ToTable("Valor");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Veterinario", b =>
                {
                    b.Property<int>("IdVeterinario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVeterinario"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<string>("NomeVeterinario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVeterinario");

                    b.HasIndex("IdColaborador")
                        .IsUnique();

                    b.ToTable("Veterinarios");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.AgendaVeterinario", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Veterinario", "Veterinario")
                        .WithMany("AgendaVeterinarios")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteIdPaciente");

                    b.Navigation("Paciente");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Agendamento", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Paciente", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.Veterinario", "Veterinario")
                        .WithMany("Agendamentos")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Paciente", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Cliente", "Cliente")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Procedimento", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.ItemEstoque", "ItemEstoque")
                        .WithOne("Procedimento")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Procedimento", "IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemEstoque");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Prontuario", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Agendamento", "Agendamento")
                        .WithOne("Prontuario")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Prontuario", "IdAgendamento")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProjetoPetMedDigital.Models.Paciente", "Paciente")
                        .WithMany("Prontuarios")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.Veterinario", "Veterinario")
                        .WithMany("Prontuarios")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Agendamento");

                    b.Navigation("Paciente");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Servico", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Agendamento", "Agendamento")
                        .WithMany("Servico")
                        .HasForeignKey("IdAgendamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.ItemEstoque", "ItemEstoque")
                        .WithOne("Servico")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Servico", "IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.Valor", "Valor")
                        .WithOne("Servico")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Servico", "IdValor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.Veterinario", "Veterinario")
                        .WithMany("Servico")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("ItemEstoque");

                    b.Navigation("Valor");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Usuario", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.CadastroColaborador", "CadastroColaborador")
                        .WithOne("Usuario")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Usuario", "IdColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CadastroColaborador");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Vacina", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Paciente", "Paciente")
                        .WithMany("Vacinas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoPetMedDigital.Models.ItemEstoque", "ItemEstoque")
                        .WithOne("Vacina")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Vacina", "IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemEstoque");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Valor", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.Cliente", "Cliente")
                        .WithMany("Valores")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Veterinario", b =>
                {
                    b.HasOne("ProjetoPetMedDigital.Models.CadastroColaborador", "CadastroColaborador")
                        .WithOne("Veterinario")
                        .HasForeignKey("ProjetoPetMedDigital.Models.Veterinario", "IdColaborador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CadastroColaborador");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Agendamento", b =>
                {
                    b.Navigation("Prontuario");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.CadastroColaborador", b =>
                {
                    b.Navigation("Usuario");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Cliente", b =>
                {
                    b.Navigation("Pacientes");

                    b.Navigation("Valores");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.ItemEstoque", b =>
                {
                    b.Navigation("Procedimento");

                    b.Navigation("Servico");

                    b.Navigation("Vacina");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Paciente", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Prontuarios");

                    b.Navigation("Vacinas");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Valor", b =>
                {
                    b.Navigation("Servico");
                });

            modelBuilder.Entity("ProjetoPetMedDigital.Models.Veterinario", b =>
                {
                    b.Navigation("AgendaVeterinarios");

                    b.Navigation("Agendamentos");

                    b.Navigation("Prontuarios");

                    b.Navigation("Servico");
                });
#pragma warning restore 612, 618
        }
    }
}
